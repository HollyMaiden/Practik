
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьПоля();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоля()
	//Попытка
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	РаботникиТаблица.hasAccess КАК hasAccess,
		                      |	РаботникиТаблица.fullName КАК fullName,
		                      |	РаботникиТаблица.role КАК role,
		                      |	РаботникиТаблица.passport КАК passport
		                      |ИЗ
		                      |	ВнешнийИсточникДанных.БД.Таблица.РаботникиТаблица КАК РаботникиТаблица
							  |ГДЕ
							  | РаботникиТаблица.companyID = &идКомпании");
		
		Запрос.УстановитьПараметр("идКомпании", 1);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			элем = Справочники.Работники.СоздатьЭлемент();
			элем.hasAccess = Выборка.Получить(0);
			элем.fullName = Выборка.Получить(1);
			элем.role = Выборка.Получить(2);
			элем.passport = Выборка.Получить(3);
			элем.Записать();
		КонецЦикла;
		//Таблица = РезультатЗапроса.Выгрузить();
		
	//Исключение	//КонецПопытки;
	
		//Работодатель = Справочники.Работодатель.СоздатьЭлемент();
		//Работодатель.Фамилия = МассивСтр[1];
		//Работодатель.Имя = МассивСтр[2];
		//Работодатель.Отчество = МассивСтр[3];
		//Работодатель.НомерТелефона = МассивСтр[4];
		//Работодатель.ПредлагаемаяРаботаДолжность = МассивСтр[5];
		//Работодатель.ТребованияКСтажу = МассивСтр[6];
		//Работодатель.ТребованияКОбразованию = МассивСтр[7];
		//Работодатель.НаличиеМедосмотра = МассивСтр[8];
		//Работодатель.Записать();		
КонецПроцедуры